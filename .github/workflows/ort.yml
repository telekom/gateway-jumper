# SPDX-FileCopyrightText: 2025 Deutsche Telekom IT GmbH
#
# SPDX-License-Identifier: Apache-2.0

name: ORT Scan

on:
  pull_request:
  workflow_dispatch:
    inputs:
      release_name:
        description: "Release to generate ORT report for"
        type: string
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  check-changes:
    name: Check which files changed
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
      contents: read
    # Set job outputs to values from filter step
    outputs:
      deps: ${{ steps.filter.outputs.deps }}
    steps:
      - name: Checkout project
        if: github.event_name != 'pull_request' # Checkout not necessary for PRs
        uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            deps:
              - 'pom.xml'

  ort-scan:
    name: ORT scan
    runs-on: ubuntu-latest
    needs: [check-changes]
    permissions:
      contents: write
    if: ${{ needs.check-changes.outputs.deps == 'true' || github.event_name == 'workflow_dispatch' }} # Only run if deps have changed
    steps:
      - name: Use HTTPS for Git cloning
        run: |
          git config --global url.https://github.com/.insteadOf ssh://git@github.com/
          git config --global url.https://github.com/.insteadOf git://github.com/
      - name: Checkout project
        uses: actions/checkout@v5
      - name: Prepare ORT config
        run: |
          # Move into default config dir
          export ORT_CONFIG_DIR=$HOME/.ort/config
          mkdir -p ${ORT_CONFIG_DIR}
          cd ${ORT_CONFIG_DIR}
          # Checkout default config repo
          git init -q
          git remote add origin https://github.com/oss-review-toolkit/ort-config.git
          git fetch -q --depth 1 origin main
          git checkout -q FETCH_HEAD
          # Copy custom config into config dir if it exists
          if [ -f "${GITHUB_WORKSPACE}/.github/ort/config.yml" ]; then
            cp ${GITHUB_WORKSPACE}/.github/ort/config.yml ${ORT_CONFIG_DIR}
          fi
      - name: Run GitHub Action for ORT
        id: ort
        uses: oss-review-toolkit/ort-ci-github-action@v1
        with:
          fail-on: violations
          docker-cli-args: >-
            -e ORT_ARTIFACTORY_TOKEN=${{ secrets.ORT_ARTIFACTORY_TOKEN }}
          run: >
            cache-dependencies,
            cache-scan-results,
            labels,
            analyzer,
            scanner,
            advisor,
            evaluator,
            reporter
        # We're not using the built-in upload functionality of the ort action
        # because it is not executed if one of the previous stages fails with a
        # non-zero exit code
      - name: Manually upload ORT results
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: ort-results
          path: ${{ steps.ort.outputs.results-path }}
      - name: Submit SBOM to dependency graph
        if: github.ref == 'refs/heads/main'
        uses: advanced-security/spdx-dependency-submission-action@v0.1.1
        with:
          filePath: ${{ steps.ort.outputs.results-path }}"
      - name: Upload reports to release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.release_name }}
          files: ${{ steps.ort.outputs.results-path }}/*
