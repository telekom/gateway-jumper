# SPDX-FileCopyrightText: 2025 Deutsche Telekom AG
#
# SPDX-License-Identifier: Apache-2.0

name: Release

on:
  workflow_dispatch:
    inputs:
      do_release:
        description: "Do you want to trigger the release?"
        required: true
        default: "no"
        type: choice
        options:
          - "yes"
          - "no"

jobs:
  release:
    name: Run semantic-release
    if: ${{ github.ref == 'refs/heads/main' && github.event.inputs.do_release == 'yes' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic-release.outputs.new-release-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: 'true'
      - name: Create temporary release.config.js
        run: |
          cat > release.config.js << 'EOF'
          module.exports = {
              plugins: [
                  '@semantic-release/commit-analyzer',
                  'semantic-release-export-data',
                  '@semantic-release/release-notes-generator',
                  '@semantic-release/github',
              ],
          };
          EOF
      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          branches: |
            ['main']
          tag_format: '${version}'
          extra_plugins: |
            semantic-release-export-data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-build:
    name: Trigger build
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new-release-published == 'true'
    steps:
      - name: Trigger build
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build.yml',
              ref: context.ref,
              inputs: {
                tag: '${{ needs.release.outputs.new-release-version }}'
              }
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-ort:
    name: Trigger ORT
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new-release-published == 'true'
    steps:
      - name: Trigger build
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ort.yml',
              ref: context.ref,
              inputs: {
                release_name: '${{ needs.release.outputs.new-release-version }}'
              }
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
