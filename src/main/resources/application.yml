# SPDX-FileCopyrightText: 2023 Deutsche Telekom AG
#
# SPDX-License-Identifier: Apache-2.0

server:
  port: ${JUMPER_PORT:8080}
  shutdown: GRACEFUL
  netty:
    max-initial-line-length: 8192
    idle-timeout: 60000
  max-http-request-header-size: 16384
  forward-headers-strategy: none

management:
  health:
    redis:
      enabled: false
  endpoint:
    health:
      probes:
        enabled: true #healthcheck probes, liveness and readiness
  endpoints:
    web:
      exposure.include: gateway, loggers, prometheus, health
  observations:
    enable:
      spring.security: false
  tracing:
    enabled: true
    sampling:
      probability: 1.0
    propagation:
      type: B3_MULTI
  zipkin:
    tracing:
      endpoint: ${TRACING_URL:http://localhost:9411}/api/v2/spans
  cache:
    key-info:
      max-size: 1
      expire-after-write-minutes: 1
    token-info:
      max-size: ${jumper.tokencache.maxSize:10000}
      expire-after-write-minutes: ${jumper.tokencache.expireAfterWriteMinutes:30}

spring:
  cache:
    type: caffeine
  lifecycle:
    timeout-per-shutdown-phase: 1m
  application:
    name: ${JUMPER_NAME:jumper}
  cloud:
    gateway:
      server:
        webflux:
          forwarded:
            enabled: false
          x-forwarded:
            for-enabled: false
            prefix-append: false
            for-append: false
            host-enabled: false
            host-append: false
            port-enabled: false
            port-append: false
            proto-enabled: false
            proto-append: false
            prefix-enabled: false
          predicate:
            cookie:
              enabled: false
          metrics:
            enabled: true
          httpclient:
            proxy:
              host: ${FPA_PROXY_HOST:}
              port: ${FPA_PROXY_PORT:}
              non-proxy-hosts-pattern: ${FPA_NON_PROXY_HOSTS_REGEX:}
            response-timeout: 61s
            connect-timeout: 10000
            pool:
              metrics: true
              max-idle-time: 2s
              max-life-time: 300s
              type: ELASTIC
          default-filters:
            - name: Retry
              args:
                retries: 1
                statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE,GATEWAY_TIMEOUT
                methods: GET,POST,PUT,DELETE,PATCH,HEAD
  data:
    redis:
      repositories:
        enabled: false
      connect-timeout: ${ZONE_HEALTH_DATABASE_CONNECTTIMEOUT:500}
      timeout: ${ZONE_HEALTH_DATABASE_TIMEOUT:500}
      host: ${ZONE_HEALTH_DATABASE_HOST:localhost}
      port: ${ZONE_HEALTH_DATABASE_PORT:6379}
      database: ${ZONE_HEALTH_DATABASE_INDEX:2}
      password: ${ZONE_HEALTH_DATABASE_PASSWORD:foobar}
  reactor:
    context-propagation: auto
  http:
    codecs:
      max-in-memory-size: 12582912

jumper:
  tracing:
    filter-param-list: X-Amz-.*,sig
  issuer:
    url: ${JUMPER_ISSUER_URL:https://stargate-integration.test.dhei.telekom.de/auth/realms}
  stargate:
    url: ${STARGATE_URL:https://stargate-integration.test.dhei.telekom.de}
  zone:
    name: ${JUMPER_ZONE_NAME:default}
    internetFacingZones: ${JUMPER_INTERNET_FACING_ZONES:space,canis,aries} # list all zones in the mesh that are internet facing
    health:
      enabled: ${ZONE_HEALTH_ENABLED:false}
      defaultZoneHealth: ${ZONE_HEALTH_DEFAULT:true}
      redis:
        channel: ${ZONE_HEALTH_KEY_CHANNEL:stargate-zone-status}
        checkConnectionInterval: ${ZONE_HEALTH_REQUEST_GET_RATE:5000}
  spectre:
    jsonContentTypes:
      - application/json
      - application/merge-patch+json
      - application/json-patch+json
      - application/json-patch-query+json
      - application/json
      - application/problem+json
  security:
    dir: /keypair
    pk-file: tls.key
    kid-file: tls.kid
  tokencache:
    ttlOffset: 10
    maxSize: 10000
    expireAfterWriteMinutes: 30
  horizon:
    publishEventUrl: ${PUBLISH_EVENT_URL:http://producer.stage:8080/v1/events}

logging:
  structured:
    format:
      console: logstash
  level:
    jumper.service.AuditLogService: INFO
